{"mappings":"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","sources":["<anon>","src/faceLandmark.js"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire4ef1\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire4ef1\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n// Copyright 2023 The MediaPipe Authors.\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//      http://www.apache.org/licenses/LICENSE-2.0\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar $3HXpN = parcelRequire(\"3HXpN\");\nconst $7332f12928398b54$var$demosSection = document.getElementById(\"demos\");\nconst $7332f12928398b54$var$imageBlendShapes = document.getElementById(\"image-blend-shapes\");\nconst $7332f12928398b54$var$videoBlendShapes = document.getElementById(\"video-blend-shapes\");\nlet $7332f12928398b54$var$faceLandmarker;\nlet $7332f12928398b54$var$runningMode = \"VIDEO\";\nlet $7332f12928398b54$var$enableWebcamButton;\nlet $7332f12928398b54$var$webcamRunning = false;\nconst $7332f12928398b54$var$videoWidth = \"480px\";\nconsole.log(\"Load OK\");\n// Before we can use HandLandmarker class we must wait for it to finish\n// loading. Machine Learning models can be large and take a moment to\n// get everything needed to run.\nasync function $7332f12928398b54$var$createFaceLandmarker() {\n    const filesetResolver = await (0, $3HXpN.FilesetResolver).forVisionTasks(\"https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.0/wasm\");\n    $7332f12928398b54$var$faceLandmarker = await (0, $3HXpN.FaceLandmarker).createFromOptions(filesetResolver, {\n        baseOptions: {\n            modelAssetPath: `https://storage.googleapis.com/mediapipe-models/face_landmarker/face_landmarker/float16/1/face_landmarker.task`,\n            delegate: \"GPU\"\n        },\n        outputFaceBlendshapes: true,\n        runningMode: $7332f12928398b54$var$runningMode,\n        numFaces: 1\n    });\n}\n$7332f12928398b54$var$createFaceLandmarker();\nconst $7332f12928398b54$var$video2 = document.querySelector(\".video2\");\nconst $7332f12928398b54$var$canvasElement = document.querySelector(\".canvas2\");\nconst $7332f12928398b54$var$canvasCtx = $7332f12928398b54$var$canvasElement.getContext(\"2d\");\nconst $7332f12928398b54$var$hasGetUserMedia = ()=>{\n    var mediaDevices;\n    return !!((mediaDevices = navigator.mediaDevices) === null || mediaDevices === void 0 ? void 0 : mediaDevices.getUserMedia);\n};\nif ($7332f12928398b54$var$hasGetUserMedia()) {\n    $7332f12928398b54$var$enableWebcamButton = document.querySelector(\"button\");\n    $7332f12928398b54$var$enableWebcamButton.addEventListener(\"click\", $7332f12928398b54$var$enableCam);\n}\nfunction $7332f12928398b54$var$enableCam(event) {\n    let select = document.querySelector(\"#video-select2\");\n    select.innerHTML = ``;\n    navigator.mediaDevices.enumerateDevices().then((device)=>{\n        device.forEach((item, index)=>{\n            if (item.kind === \"videoinput\") {\n                // type the device id to select\n                select.addEventListener(\"change\", $7332f12928398b54$var$changeVideo);\n                select.addEventListener(\"click\", $7332f12928398b54$var$changeVideo);\n                select.innerHTML += `<option value=\"${item.deviceId}\">${item.label}</option>`;\n                console.log(item.deviceId);\n            }\n        });\n    });\n    console.log(\"enableCam\");\n}\nfunction $7332f12928398b54$var$changeVideo(event) {\n    let deviceId = event.target.value;\n    navigator.mediaDevices.getUserMedia({\n        video: {\n            deviceId: deviceId\n        }\n    }).then((stream)=>{\n        $7332f12928398b54$var$video2.srcObject = stream;\n        $7332f12928398b54$var$video2.addEventListener(\"loadeddata\", $7332f12928398b54$var$predictFace);\n    });\n}\nlet $7332f12928398b54$var$lastVideoTime = -1;\nlet $7332f12928398b54$var$results = undefined;\nconst $7332f12928398b54$var$drawingUtils = new (0, $3HXpN.DrawingUtils)($7332f12928398b54$var$canvasCtx);\nasync function $7332f12928398b54$var$predictFace() {\n    const radio = $7332f12928398b54$var$video2.videoHeight / $7332f12928398b54$var$video2.videoWidth;\n    $7332f12928398b54$var$video2.style.width = $7332f12928398b54$var$videoWidth + \"px\";\n    $7332f12928398b54$var$video2.style.height = $7332f12928398b54$var$videoWidth * radio + \"px\";\n    $7332f12928398b54$var$canvasElement.style.width = $7332f12928398b54$var$videoWidth + \"px\";\n    $7332f12928398b54$var$canvasElement.style.height = $7332f12928398b54$var$videoWidth * radio + \"px\";\n    $7332f12928398b54$var$canvasElement.width = $7332f12928398b54$var$video2.videoWidth;\n    $7332f12928398b54$var$canvasElement.height = $7332f12928398b54$var$video2.videoHeight;\n    // Now let's start detecting the stream.\n    if ($7332f12928398b54$var$runningMode === \"IMAGE\") {\n        $7332f12928398b54$var$runningMode = \"VIDEO\";\n        await $7332f12928398b54$var$faceLandmarker.setOptions({\n            runningMode: $7332f12928398b54$var$runningMode\n        });\n    }\n    let startTimeMs = performance.now();\n    if ($7332f12928398b54$var$lastVideoTime !== $7332f12928398b54$var$video2.currentTime) {\n        $7332f12928398b54$var$lastVideoTime = $7332f12928398b54$var$video2.currentTime;\n        $7332f12928398b54$var$results = $7332f12928398b54$var$faceLandmarker.detectForVideo($7332f12928398b54$var$video2, startTimeMs);\n    }\n    if ($7332f12928398b54$var$results.faceLandmarks) for (const landmarks of $7332f12928398b54$var$results.faceLandmarks){\n        $7332f12928398b54$var$drawingUtils.drawConnectors(landmarks, (0, $3HXpN.FaceLandmarker).FACE_LANDMARKS_TESSELATION, {\n            color: \"#C0C0C070\",\n            lineWidth: 1\n        });\n        $7332f12928398b54$var$drawingUtils.drawConnectors(landmarks, (0, $3HXpN.FaceLandmarker).FACE_LANDMARKS_RIGHT_EYE, {\n            color: \"#FF3030\"\n        });\n        $7332f12928398b54$var$drawingUtils.drawConnectors(landmarks, (0, $3HXpN.FaceLandmarker).FACE_LANDMARKS_RIGHT_EYEBROW, {\n            color: \"#FF3030\"\n        });\n        $7332f12928398b54$var$drawingUtils.drawConnectors(landmarks, (0, $3HXpN.FaceLandmarker).FACE_LANDMARKS_LEFT_EYE, {\n            color: \"#30FF30\"\n        });\n        $7332f12928398b54$var$drawingUtils.drawConnectors(landmarks, (0, $3HXpN.FaceLandmarker).FACE_LANDMARKS_LEFT_EYEBROW, {\n            color: \"#30FF30\"\n        });\n        $7332f12928398b54$var$drawingUtils.drawConnectors(landmarks, (0, $3HXpN.FaceLandmarker).FACE_LANDMARKS_FACE_OVAL, {\n            color: \"#E0E0E0\"\n        });\n        $7332f12928398b54$var$drawingUtils.drawConnectors(landmarks, (0, $3HXpN.FaceLandmarker).FACE_LANDMARKS_LIPS, {\n            color: \"#E0E0E0\"\n        });\n        $7332f12928398b54$var$drawingUtils.drawConnectors(landmarks, (0, $3HXpN.FaceLandmarker).FACE_LANDMARKS_RIGHT_IRIS, {\n            color: \"#FF3030\"\n        });\n        $7332f12928398b54$var$drawingUtils.drawConnectors(landmarks, (0, $3HXpN.FaceLandmarker).FACE_LANDMARKS_LEFT_IRIS, {\n            color: \"#30FF30\"\n        });\n    }\n    // Call this function again to keep predicting when the browser is ready.\n    window.requestAnimationFrame($7332f12928398b54$var$predictFace);\n}\n\n\n//# sourceMappingURL=index.62500ced.js.map\n","// Copyright 2023 The MediaPipe Authors.\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//      http://www.apache.org/licenses/LICENSE-2.0\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\nimport { FaceLandmarker, FilesetResolver, DrawingUtils } from \"@mediapipe/tasks-vision\";\r\n\r\nconst demosSection = document.getElementById(\"demos\");\r\nconst imageBlendShapes = document.getElementById(\"image-blend-shapes\");\r\nconst videoBlendShapes = document.getElementById(\"video-blend-shapes\");\r\nlet faceLandmarker;\r\nlet runningMode = \"VIDEO\";\r\nlet enableWebcamButton;\r\nlet webcamRunning = false;\r\nconst videoWidth = \"480px\";\r\nconsole.log(\"Load OK\")\r\n// Before we can use HandLandmarker class we must wait for it to finish\r\n// loading. Machine Learning models can be large and take a moment to\r\n// get everything needed to run.\r\nasync function createFaceLandmarker() {\r\n    const filesetResolver = await FilesetResolver.forVisionTasks(\"https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.0/wasm\");\r\n    faceLandmarker = await FaceLandmarker.createFromOptions(filesetResolver, {\r\n        baseOptions: {\r\n            modelAssetPath: `https://storage.googleapis.com/mediapipe-models/face_landmarker/face_landmarker/float16/1/face_landmarker.task`,\r\n            delegate: \"GPU\"\r\n        },\r\n        outputFaceBlendshapes: true,\r\n        runningMode,\r\n        numFaces: 1\r\n    });\r\n}\r\ncreateFaceLandmarker();\r\n\r\nconst video2 = document.querySelector(\".video2\");\r\nconst canvasElement = document.querySelector(\".canvas2\");\r\nconst canvasCtx = canvasElement.getContext(\"2d\");\r\n\r\nconst hasGetUserMedia = () => {\r\n    var mediaDevices;\r\n    return !!((mediaDevices = navigator.mediaDevices) === null || mediaDevices === void 0 ? void 0 : mediaDevices.getUserMedia);\r\n};\r\nif (hasGetUserMedia()) {\r\n    enableWebcamButton = document.querySelector(\"button\");\r\n    enableWebcamButton.addEventListener(\"click\", enableCam);\r\n}\r\nfunction enableCam(event) {\r\n\r\n\r\n    let select = document.querySelector(\"#video-select2\");\r\n\r\n    select.innerHTML = ``\r\n\r\n\r\n    navigator.mediaDevices.enumerateDevices().then(device => {\r\n        device.forEach((item, index) => {\r\n            if (item.kind === \"videoinput\") {\r\n                // type the device id to select\r\n                select.addEventListener(\"change\", changeVideo);\r\n                select.addEventListener('click', changeVideo);\r\n                select.innerHTML += `<option value=\"${item.deviceId}\">${item.label}</option>`\r\n                console.log(item.deviceId)\r\n            }\r\n        })\r\n    });\r\n    console.log(\"enableCam\")\r\n\r\n\r\n}\r\n\r\nfunction changeVideo(event) {\r\n    let deviceId = event.target.value;\r\n\r\n    navigator.mediaDevices.getUserMedia({\r\n        video: {\r\n            deviceId: deviceId\r\n        }\r\n    }).then(stream => {\r\n        video2.srcObject = stream;\r\n        video2.addEventListener(\"loadeddata\", predictFace);\r\n    })\r\n}\r\nlet lastVideoTime = -1;\r\nlet results = undefined;\r\nconst drawingUtils = new DrawingUtils(canvasCtx);\r\nasync function predictFace() {\r\n    const radio = video2.videoHeight / video2.videoWidth;\r\n    video2.style.width = videoWidth + \"px\";\r\n    video2.style.height = videoWidth * radio + \"px\";\r\n    canvasElement.style.width = videoWidth + \"px\";\r\n    canvasElement.style.height = videoWidth * radio + \"px\";\r\n    canvasElement.width = video2.videoWidth;\r\n    canvasElement.height = video2.videoHeight;\r\n    // Now let's start detecting the stream.\r\n    if (runningMode === \"IMAGE\") {\r\n        runningMode = \"VIDEO\";\r\n        await faceLandmarker.setOptions({ runningMode: runningMode });\r\n    }\r\n    let startTimeMs = performance.now();\r\n    if (lastVideoTime !== video2.currentTime) {\r\n        lastVideoTime = video2.currentTime;\r\n        results = faceLandmarker.detectForVideo(video2, startTimeMs);\r\n    }\r\n    if (results.faceLandmarks) {\r\n        for (const landmarks of results.faceLandmarks) {\r\n            drawingUtils.drawConnectors(landmarks, FaceLandmarker.FACE_LANDMARKS_TESSELATION, { color: \"#C0C0C070\", lineWidth: 1 });\r\n            drawingUtils.drawConnectors(landmarks, FaceLandmarker.FACE_LANDMARKS_RIGHT_EYE, { color: \"#FF3030\" });\r\n            drawingUtils.drawConnectors(landmarks, FaceLandmarker.FACE_LANDMARKS_RIGHT_EYEBROW, { color: \"#FF3030\" });\r\n            drawingUtils.drawConnectors(landmarks, FaceLandmarker.FACE_LANDMARKS_LEFT_EYE, { color: \"#30FF30\" });\r\n            drawingUtils.drawConnectors(landmarks, FaceLandmarker.FACE_LANDMARKS_LEFT_EYEBROW, { color: \"#30FF30\" });\r\n            drawingUtils.drawConnectors(landmarks, FaceLandmarker.FACE_LANDMARKS_FACE_OVAL, { color: \"#E0E0E0\" });\r\n            drawingUtils.drawConnectors(landmarks, FaceLandmarker.FACE_LANDMARKS_LIPS, { color: \"#E0E0E0\" });\r\n            drawingUtils.drawConnectors(landmarks, FaceLandmarker.FACE_LANDMARKS_RIGHT_IRIS, { color: \"#FF3030\" });\r\n            drawingUtils.drawConnectors(landmarks, FaceLandmarker.FACE_LANDMARKS_LEFT_IRIS, { color: \"#30FF30\" });\r\n        }\r\n    }\r\n    // Call this function again to keep predicting when the browser is ready.\r\n\r\n    window.requestAnimationFrame(predictFace);\r\n\r\n}\r\n"],"names":["$7332f12928398b54$var$faceLandmarker","$7332f12928398b54$var$results","mediaDevices","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$3HXpN","document","getElementById","$7332f12928398b54$var$runningMode","$7332f12928398b54$var$videoWidth","console","log","$7332f12928398b54$var$createFaceLandmarker","filesetResolver","FilesetResolver","forVisionTasks","FaceLandmarker","createFromOptions","baseOptions","modelAssetPath","delegate","outputFaceBlendshapes","runningMode","numFaces","$7332f12928398b54$var$video2","querySelector","$7332f12928398b54$var$canvasElement","$7332f12928398b54$var$canvasCtx","getContext","$7332f12928398b54$var$changeVideo","event","deviceId","target","value","navigator","getUserMedia","video","then","stream","srcObject","addEventListener","$7332f12928398b54$var$predictFace","$7332f12928398b54$var$enableWebcamButton","select","innerHTML","enumerateDevices","device","forEach","item","index","kind","label","$7332f12928398b54$var$lastVideoTime","$7332f12928398b54$var$drawingUtils","DrawingUtils","radio","videoHeight","videoWidth","style","width","height","setOptions","startTimeMs","performance","now","currentTime","detectForVideo","faceLandmarks","landmarks","drawConnectors","FACE_LANDMARKS_TESSELATION","color","lineWidth","FACE_LANDMARKS_RIGHT_EYE","FACE_LANDMARKS_RIGHT_EYEBROW","FACE_LANDMARKS_LEFT_EYE","FACE_LANDMARKS_LEFT_EYEBROW","FACE_LANDMARKS_FACE_OVAL","FACE_LANDMARKS_LIPS","FACE_LANDMARKS_RIGHT_IRIS","FACE_LANDMARKS_LEFT_IRIS","window","requestAnimationFrame"],"version":3,"file":"index.62500ced.js.map"}